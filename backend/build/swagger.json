{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"FlattenMaps_T_": {
				"properties": {},
				"type": "object"
			},
			"BasicDatafile": {
				"$ref": "#/components/schemas/FlattenMaps_T_"
			},
			"NotFoundError": {
				"properties": {
					"name": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"stack": {
						"type": "string"
					}
				},
				"required": [
					"name",
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MongooseObjectId": {
				"type": "string",
				"example": "646365496740ded7a396f5d0",
				"pattern": "[0-9A-Fa-f]{24}"
			},
			"Pick_BasicDatafile.title-or-description_": {
				"properties": {
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					}
				},
				"required": [
					"title",
					"description"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"BasicDatafileCreateParams": {
				"$ref": "#/components/schemas/Pick_BasicDatafile.title-or-description_"
			},
			"BasicDatafileUpdateParams": {
				"$ref": "#/components/schemas/Pick_BasicDatafile.title-or-description_"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "tcf_backend",
		"version": "1.0.0",
		"description": "Express backend for TCF Project",
		"contact": {
			"name": "see repository"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/datafiles": {
			"get": {
				"operationId": "GetAllDataFiles",
				"responses": {
					"200": {
						"description": "A promise that resolves to an array of BasicDatafile objects.",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/BasicDatafile"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Retrieves the list of existing files.",
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateDatafile",
				"responses": {
					"201": {
						"description": "Created"
					}
				},
				"description": "Creates a file.",
				"security": [],
				"parameters": [],
				"requestBody": {
					"description": "- The data for creating the file.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/BasicDatafileCreateParams",
								"description": "- The data for creating the file."
							}
						}
					}
				}
			}
		},
		"/datafiles/{fileId}": {
			"get": {
				"operationId": "GetDatafile",
				"responses": {
					"200": {
						"description": "A promise that resolves to the BasicDatafile object.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/BasicDatafile"
								}
							}
						}
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NotFoundError"
								}
							}
						}
					}
				},
				"description": "Retrieves the details of an existing file.",
				"security": [],
				"parameters": [
					{
						"description": "- The unique identifier of the file.",
						"in": "path",
						"name": "fileId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/MongooseObjectId"
						}
					}
				]
			},
			"delete": {
				"operationId": "DeleteDatafile",
				"responses": {
					"204": {
						"description": "No content"
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NotFoundError"
								}
							}
						}
					}
				},
				"description": "Deletes a file.",
				"security": [],
				"parameters": [
					{
						"description": "- The unique identifier of the file to delete.",
						"in": "path",
						"name": "fileId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/MongooseObjectId"
						}
					}
				]
			},
			"put": {
				"operationId": "UpdateDatafile",
				"responses": {
					"204": {
						"description": "No content"
					},
					"404": {
						"description": "Not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NotFoundError"
								}
							}
						}
					}
				},
				"description": "Updates a file.",
				"security": [],
				"parameters": [
					{
						"description": "- The unique identifier of the file to update.",
						"in": "path",
						"name": "fileId",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/MongooseObjectId"
						}
					}
				],
				"requestBody": {
					"description": "- The data for updating the file.",
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/BasicDatafileUpdateParams",
								"description": "- The data for updating the file."
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/api"
		}
	]
}